get.edge.attribute(n2r$mel[1], "dest", unlist=F)[[1]][3]
unlist(get.edge.attribute(n2r$mel[1], "dest", unlist=F))[3]
source("netw_funk.R")
n2r <- make_tworout()
get.edge.attribute(n2r$mel, "dest", unlist=F)
source("netw_funk.R")
n2r <- make_tworout()
get.edge.attribute(n2r$mel, "dest", unlist=F)
get.edge.attribute(n2r$mel[1], "dest")
source("netw_funk.R")
neighb(n2r, 1, 5)
source("netw_funk.R")
neighb(n2r, 1, 5)
neighb(n2r, 9, 5)
vert <- 9
dest <- 5
nw <- n2r
    elist <- as.matrix.network(nw, "edgelist")#
    idx <- which(elist[,1] == vert)#
    nop <- NULL#
    for (i in idx) {#
        if (any(grepl(dest, get.edge.attribute(nw$mel[i], "dest"))) == F) {#
            nop <- c(nop, i)#
        }#
    }#
    idx <- setdiff(idx, nop)
idx
elist
nop
    idx <- which(elist[,1] == vert)#
    nop <- NULL
idx
 get.edge.attribute(nw$mel[9], "dest")
 get.edge.attribute(nw$mel[9], "dest", unlist=F)
 get.edge.attribute(nw$mel, "dest", unlist=F)
 get.edge.attribute(nw$mel[17], "dest", unlist=F)
grepl(vert, get.edge.attribute(nw$mel[17], "dest", unlist=F))
source("netw_funk.R")
n2r <- make_tworout()
nw <- n2r
neighb(n2r, 9, 5)
neighb(n2r, 1, 5)
source("netw_funk.R")
n2r <- make_tworout()
nw <- n2r
neighb(n2r, 9, 5)
neighb(n2r, 1, 5)
for (p in 1:0) {print(p)}
for (p in NULL) {print(p)}
?vector
?seq
seq(from=1, to=10, by=1)
seq(from=1, to=10, by=-1)
seq.int(from=1, to=10, by=-1)
seq.int(from=1, to=-2, by=-1)
kpaths <- NULL
length(kpaths)
1:length(kpaths)
length(kpaths)
seq(from=1, length.out=length(kpaths))
seq(from=1, length.out=length(kpaths), by=1)
for ( i in seq(from=1, length.out=length(kpaths), by=1)) {print(i)}
c(NULL, NULL)
source("netw_funk.R")
get_odpaths(n2r, 1, 5, NULL)
source("netw_funk.R")
get_odpaths(n2r, 1, 5, NULL)
get_odpaths(n2r, 10, 5, NULL)
source("netw_funk.R")
get_odpaths(n2r, 1, 5, NULL)
get_odpaths(n2r, 5, 5, NULL)
get_odpaths(n2r, 9, 5, NULL)
length(get_odpaths(n2r, 9, 5, NULL))
source("netw_funk.R")
allpaths <- get_allpaths(n2r)
length(allpaths)
allpaths[1]
allpaths[[1]]
source("netw_funk.R")
allpaths <- get_allpaths(n2r)
length(allpaths)
allpaths[[1]]
allpaths[[2]]
list(list(NULL))
source("netw_funk.R")
allpaths <- get_allpaths(n2r)
allpaths[[1]]
allpaths[[2]]
allpaths[[2]]
allpaths
source("netw_funk.R")
allpaths <- get_allpaths(n2r)
allpaths
unlist(allpaths[11])
length(allpaths)
network.edgecount(n2r)
allpaths[13]
allpaths[[13]]
source("netw_funk.R")
A <- make_A(n2r)
dim(A)
A[,1]
A[,2]
allpaths[[2]]
elist
which(elist == c(2,9))
source("netw_funk.R")
A <- make_A(n2r)
A[,1]
A[,2]
allpaths[[1]]
get_odpaths(n2r,1,1,NULL)
source("netw_funk.R")
get_odpaths(n2r,1,1,NULL)
neighb(n2r,1,1)
source("netw_funk.R")
get_odpaths(n2r,1,1,NULL)
source("netw_funk.R")
get_odpaths(n2r,1,1,NULL)
onei
n
n
n
n
n
n
n
k
dest
lpaths
kpaths
n
kpaths
n
kpaths
n
n
orig
dest
lpaths
k
onei
n
k
n
k
n
n
lpaths
n
lpaths
n
kpaths
length(kpaths)
Q
source("netw_funk.R")
get_odpaths(n2r,1,1,NULL)
Q
source("netw_funk.R")
get_odpaths(n2r,1,1,NULL)
lpaths <- NULL
lpaths <- c(lpaths, list(1,2))
lpaths
lpaths <- c(lpaths, c(1,2))
lpaths
lpaths <- NULL
lpaths <- c(lpaths, c(1,2))
lpaths
source("netw_funk.R")
get_odpaths(n2r,1,1,NULL)
lpaths
lpaths <- NULL
lpaths <- list(lpaths, c(1,2))
lpaths
lpaths <- NULL
lpaths <- as.list(lpaths, c(1,2))
lpaths
lpaths <- list(lpaths, c(1,2))
lpaths <- NULL
lpaths <- c(lpaths, list(c(1,2)))
lpaths
source("netw_funk.R")
get_odpaths(n2r,1,1,NULL)
allpaths <- get_allpaths(n2r)
allpaths[[1]]
allpaths
A <- make_A(n2r)
A[,1]
A[,2]
A[,3]
A[,4]
A[,5]
qr(A)$rank
write.table(A,"Art.txt",row.names=F, col.names=F)
getwd()
rm(list=ls())
source("netw_funk.R")
trout <- make_tworout()
A <- make_A(trout)
dim(A)
qr(A)$rank
ls()
as.matrix.network(trout, "edgelist")
summary(trout)
source("netw_funk.R")
trout <- make_tworout()
summary(trout)
list.edge.attributes(trout)
get.edge.attribute(trout$mel,"na")
get.edge.attribute(trout$mel,"na",unlist=F)
ls()
elist <- as.matrix.network(trout, "edgelist")
elist[,1]
as.character(elist[,1])
?cat
edgenames <- rep("0",nrow(elist))
edgenames
edgenames <- as.character(elist[,1])
edgenames
edgenames + edgenames
cat(edgenames)
for (i in 1:nrow(edgenames)) {
edgenames[i] <- cat(elist[i,1],"_",elist[i,2])
}
for (i in 1:length(edgenames)) {
edgenames[i] <- cat(elist[i,1],"_",elist[i,2])
}
i
cat(elist[i,1],"_",elist[i,2])
cat(as.character(elist[i,1]),"_",as.character(elist[i,2]))
cat(as.character(elist[i,1]),"_",as.character(elist[i,2]),sep="")
cat(elist[i,1],"_",elist[i,2],sep="")
edgenames
elist
1:length(edgenames)
for (i in 1:length(edgenames)) {
edgenames[i] <- cat(elist[i,1],"_",elist[i,2],sep="")
}
i
edgenames[i] <- cat(elist[i,1],"_",elist[i,2],sep="")
cat(elist[i,1],"_",elist[i,2],sep="")
edgenames[i]
edgenames[i] <- ""
edgenames[i] <- "1_9"
edgenames[i]
as.character(cat(elist[i,1],"_",elist[i,2],sep=""))
paste(elist[i,1],"_",elist[i,2],sep="")
for (i in 1:length(edgenames)) {
edgenames[i] <- paste(elist[i,1],"_",elist[i,2],sep="")
}
edgenames
edgenames[i] <- paste(network.vertex.names[elist[i,1]],"_",network.vertex.names[elist[i,2]],sep="")
edgenames[i] <- paste(network.vertex.names(trout)[elist[i,1]],"_",network.vertex.names(trout)[elist[i,2]],sep="")
i
edgenames[18]
for (i in 1:length(edgenames)) {
edgenames[i] <- paste(network.vertex.names(trout)[elist[i,1]],"_",network.vertex.names(trout)[elist[i,2]],sep="")
}
edgenames
